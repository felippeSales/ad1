setwd("~/")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(plotly)
ano.atual <- read.csv("~/Documents/workspace/ufcg/ad1-2016.1/repo/p1/dados/ano-atual.csv")
dadosDouglas <- filter(ano.atual,txtFornecedor=="DOUGLAS CUNHA DA SILVA ME")
parlamentares_douglas <- group_by(dadosDouglas,txNomeParlamentar)
parlamentares_douglas_sum <- summarise(parlamentares_douglas, total=sum(vlrLiquido))
partidos_douglas <- group_by(dadosDouglas,sgPartido)
partidos_douglas_sum <- summarise(partidos_douglas, total=sum(vlrLiquido))
partidos_douglas_sum$fraction = partidos_douglas_sum$total / sum(partidos_douglas_sum$total)
partidos_douglas_sum = partidos_douglas_sum[order(partidos_douglas_sum$fraction), ]
partidos_douglas_sum$ymax = cumsum(partidos_douglas_sum$fraction)
partidos_douglas_sum$ymin = c(0, head(partidos_douglas_sum$ymax, n=-1))
ano.atual <- read.csv("~/Documents/workspace/ufcg/ad1-2016.1/repo/p1/dados/ano-atual.csv")
setwd("~/Documents/workspace/ufcg/ad1-2016.1/repo/problema-2/Checkpoint3")
shiny::runApp('~/Documents/workspace/UFCG/AD1-2016.1/repo/problema-2/Checkpoint3')
cis_cor_titulo %>%
ggplot(aes(x = Correlacao, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
b_cor_titulo = bootstrap(movies_tituloSize, cor(y=titulo_size, x=popularity), R = 1000)
ci_cor_titulo = CI.percentile(b_cor_titulo, probs = c(.025, .975),na.rm=TRUE)
cis_cor_titulo = data.frame(ci_cor_titulo)
cis_cor_titulo$Correlacao = "Correlacao
b_cor_titulo = bootstrap(movies_tituloSize, cor(y=titulo_size, x=popularity), R = 1000)
ci_cor_titulo = CI.percentile(b_cor_titulo, probs = c(.025, .975),na.rm=TRUE)
cis_cor_titulo = data.frame(ci_cor_titulo)
cis_cor_titulo$Correlacao = "Correlacao"
b_cor_titulo = bootstrap(movies_tituloSize, cor(y=titulo_size, x=popularity), R = 1000)
ci_cor_titulo = CI.percentile(b_cor_titulo, probs = c(.025, .975),na.rm=TRUE)
cis_cor_titulo = data.frame(ci_cor_titulo)
cis_cor_titulo$Correlacao = "Correlacao"
b_cor_titulo = bootstrap(movies_tituloSize, cor(y=titulo_size, x=popularity), R = 1000)
library(shiny)
library(ggplot2)
library(GGally)
library(dplyr)
library(resample)
library(stringr)
movies <- read.csv("ratings-por-filme.csv")
movies$genres <- as.character(movies$genres)
movies$title <- as.character(movies$title)
movies = movies %>%
rowwise() %>%
mutate(num_genres = length(unlist(strsplit(genres, '[|]'))))
movies = mutate(movies, title=(unlist(strsplit(title,'[(]'))[1]))
movies_tituloSize = mutate(movies, titulo_size = nchar(unlist(strsplit(title,'[:]'))[1]))
faz_boots = function(dados,mediana.bool){
generos = unique(dados$genero)
if(mediana.bool){
b = bootstrap(dados[dados$genero == generos[1],], median(rating), R = 1000)
ci = CI.percentile(b, probs = c(.025, .975))
}else{
b = bootstrap(dados[dados$genero == generos[1],], mean(rating), R = 1000)
ci = CI.bca(b, probs = c(.025, .975))
}
row.names(ci) <- generos[1]
for(i in 2:length(generos)) {
if(mediana.bool){
b = bootstrap(dados[dados$genero == generos[i],], median(rating), R = 1000)
row = CI.percentile(b, probs = c(.025, .975))
}else{
b = bootstrap(dados[dados$genero == generos[i],], mean(rating), R = 1000)
row = CI.bca(b, probs = c(.025, .975))
}
row.names(row) <- generos[i]
ci = rbind(ci,row)
}
cis = data.frame(ci)
cis$genero = row.names(cis)
return(cis)
}
cria_avaliacoes_genero = function(dados){
df <- data.frame(genero=character(),
rating=double(),
stringsAsFactors=FALSE)
for(i in 1:nrow(dados)) {
generos = unlist(strsplit(dados[i,]$genres,'[|]'))
for(j in 1:length(generos)){
df[nrow(df) + 1,]<- c(generos[j],dados[i,]$rating)
}
}
df$rating <- as.double(df$rating)
return(df)
}
movies_genero = cria_avaliacoes_genero(movies)
cis_genero_mediana = faz_boots(movies_genero, TRUE)
cis_genero_media = faz_boots(movies_genero, FALSE)
b_cor_titulo = bootstrap(movies_tituloSize, cor(y=titulo_size, x=popularity), R = 1000)
ci_cor_titulo = CI.percentile(b_cor_titulo, probs = c(.025, .975),na.rm=TRUE)
cis_cor_titulo = data.frame(ci_cor_titulo)
cis_cor_titulo$Correlacao = "Correlacao"
cis_cor_titulo %>%
ggplot(aes(x = Correlacao, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
b_cor_titulo = bootstrap(movies_tituloSizeFull, cor(y=titulo_size, x=popularity), R = 1000)
ci_cor_titulo = CI.percentile(b_cor_titulo, probs = c(.025, .975),na.rm=TRUE)
cis_cor_titulo_full = data.frame(ci_cor_titulo)
cis_cor_titulo_full$Correlacao = "Correlacao, Título Completo"
movies_tituloSizeFull = mutate(movies, titulo_size = nchar(title))
b_cor_titulo = bootstrap(movies_tituloSizeFull, cor(y=titulo_size, x=popularity), R = 1000)
ci_cor_titulo = CI.percentile(b_cor_titulo, probs = c(.025, .975),na.rm=TRUE)
cis_cor_titulo_full = data.frame(ci_cor_titulo)
cis_cor_titulo_full$Correlacao = "Correlacao, Título Completo"
cis_cor_titulo_full %>%
ggplot(aes(x = Correlacao, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
runApp('~/Documents/workspace/UFCG/AD1-2016.1/repo/problema-2/Checkpoint3')
ratings <- read.csv("ratings.csv")
View(ratings)
library(shiny)
library(ggplot2)
library(GGally)
library(dplyr)
library(resample)
library(stringr)
movies <- read.csv("ratings-por-filme.csv")
ratings <- read.csv("ratings.csv")
movies$genres <- as.character(movies$genres)
movies$title <- as.character(movies$title)
movies = movies %>%
rowwise() %>%
mutate(num_genres = length(unlist(strsplit(genres, '[|]'))))
movies = movies %>%
rowwise() %>%
mutate(var = var(ratings[(ratings$movieId ==  movies$movieId),]$rating))
help(var)
View(movies)
movies = movies %>%
rowwise() %>%
mutate(var = var(ratings[(ratings$movieId ==  movies$movieId),]$rating))
ratings[(ratings$movieId ==  movies$movieId),]
View(ratings)
View(ratings)
ratings[ratings$movieId == 1,]
adiciona_variancia = function(dados,dados_ratings){
for(i in 1:nrow(dados)) {
dados[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
}
}
adiciona_variancia(movies, ratings)
movies[1,]
movies = adiciona_variancia(movies, ratings)
warning()
warnings()
adiciona_variancia = function(dados,dados_ratings){
for(i in 1:nrow(dados)) {
dados[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
}
return(dados)
}
movies = adiciona_variancia(movies, ratings)
adiciona_variancia = function(dados,dados_ratings){
df <- data.frame(var=double(),
stringsAsFactors=FALSE)
for(i in 1:nrow(dados)) {
df[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
}
df$var <- as.double(df$var)
return(df)
}
movies$var = adiciona_variancia(movies, ratings)
adiciona_variancia = function(dados,dados_ratings){
df <- data.frame(var=double(),
stringsAsFactors=FALSE)
for(i in 1:nrow(dados)) {
df[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
}
df$var <- as.double(df$var)
return(df)
}
movies <- read.csv("ratings-por-filme.csv")
ratings <- read.csv("ratings.csv")
movies$var = adiciona_variancia(movies, ratings)
View(movies)
a = adiciona_variancia(movies,ratings)
a
View(movies)
View(a)
a = adiciona_variancia(movies,ratings)
adiciona_variancia = function(dados,dados_ratings){
df <- data.frame(var=double(),
stringsAsFactors=FALSE)
for(i in 1:nrow(dados)) {
print(var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating))
}
df$var <- as.double(df$var)
return(df)
}
adiciona_variancia(movies,ratings)
adiciona_variancia = function(dados,dados_ratings){
df <- data.frame(var=double(),movieId=character(),
stringsAsFactors=FALSE)
for(i in 1:nrow(dados)) {
df[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
df[i,]$movieId = dados[i,]$movieId
}
df$var <- as.double(df$var)
return(df)
}
a = adiciona_variancia(movie)
a = adiciona_variancia(movies,ratings)
View(a)
adiciona_variancia = function(dados,dados_ratings){
df <- data.frame(var=double(),movieId=character(),
stringsAsFactors=FALSE)
for(i in 1:nrow(dados)) {
dados[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
#df[i,]$movieId = dados[i,]$movieId
}
df$var <- as.double(df$var)
return(dados)
}
a = adiciona_variancia(movies,ratings)
View(a)
na.omit(a)
View(a)
library(shiny)
library(ggplot2)
library(GGally)
library(dplyr)
library(resample)
library(stringr)
movies <- read.csv("ratings-por-filme.csv")
ratings <- read.csv("ratings.csv")
adiciona_variancia = function(dados,dados_ratings){
for(i in 1:nrow(dados)) {
dados[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
}
return(dados)
}
movies_var = adiciona_variancia(movies,ratings)
movies_var = na.omit(movies_var)
b_cor_popularidade = bootstrap(movies_var, cor(y=var, x=popularity), R = 1000)
ci_cor_popularidade = CI.percentile(b_cor_popularidade, probs = c(.025, .975),na.rm=TRUE)
View(movies_var)
View(movies_var)
View(movies_var)
adiciona_variancia = function(dados,dados_ratings){
for(i in 1:nrow(dados)) {
dados[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
}
print(dados[1,])
return(dados)
}
movies_var = adiciona_variancia(movies,ratings)
movies_var = movies %>%
rowwise() %>%
mutate(var = var(ratings[(ratings$movieId ==  movies$movieId),]$rating))
ratings$rating <- as.double(ratings$rating)
movies_var = movies %>%
rowwise() %>%
mutate(var = var(ratings[(ratings$movieId ==  movies$movieId),]$rating))
movies <- read.csv("ratings-por-filme.csv")
ratings <- read.csv("ratings.csv")
movies$genres <- as.character(movies$genres)
movies$title <- as.character(movies$title)
ratings$rating <- as.double(ratings$rating)
movies_var = movies %>%
rowwise() %>%
mutate(var = var(ratings[(ratings$movieId ==  movies$movieId),]$rating))
View(movies)
adiciona_variancia = function(dados,dados_ratings){
for(i in 1:nrow(dados)) {
dados[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
}
print(dados[1,])
return(dados)
}
movies_var = adiciona_variancia(movies,ratings)
adiciona_variancia = function(dados,dados_ratings){
teste = dados
for(i in 1:10) {
teste[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
}
return(teste)
}
movies_var = adiciona_variancia(movies,ratings)
movies_var = adiciona_variancia(movies,ratings)
adiciona_variancia = function(dados,dados_ratings){
teste = dados
teste$var = NA
for(i in 1:10) {
teste[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
}
return(teste)
}
movies_var = adiciona_variancia(movies,ratings)
View(movies)
help("data.frame")
adiciona_variancia = function(dados,dados_ratings){
teste = dados
teste$var = NA
for(i in 1:10) {
teste[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
}
return(teste)
}
movies_var = adiciona_variancia(movies,ratings)
movies_var = adiciona_variancia(movies,ratings)
View(movies_var)
adiciona_variancia = function(dados,dados_ratings){
teste = dados
teste$var = NA
for(i in 1:nrow(dados)) {
teste[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
}
return(teste)
}
movies_var = adiciona_variancia(movies,ratings)
movies_var = na.omit(movies_var)
b_cor_popularidade = bootstrap(movies_var, cor(y=var, x=popularity), R = 1000)
ci_cor_popularidade = CI.percentile(b_cor_popularidade, probs = c(.025, .975),na.rm=TRUE)
View(movies_var)
cis_cor_popularidade = data.frame(ci_cor_popularidade)
cis_cor_popularidade$Correlacao = "Correlacao, Popularidade x Variância"
View(cis_cor_popularidade)
View(cis_cor_popularidade)
cis_cor_popularidade %>%
ggplot(aes(x = Correlacao, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
cis_var_genero = faz_boots_var(movies)
faz_boots_var = function(dados){
generos = unique(dados$genero)
b = bootstrap(dados[dados$genero == generos[1],], var(rating), R = 1000)
ci = CI.bca(b, probs = c(.025, .975))
row.names(ci) <- generos[1]
for(i in 2:length(generos)) {
b = bootstrap(dados[dados$genero == generos[i],], var(rating), R = 1000)
row = CI.bca(b, probs = c(.025, .975))
row.names(row) <- generos[i]
ci = rbind(ci,row)
}
cis = data.frame(ci)
cis$genero = row.names(cis)
return(cis)
}
cis_var_genero = faz_boots_var(movies)
cis_var_genero = faz_boots_var(movies)
# Define server logic required to draw a histogram
cis_var_genero = faz_boots_var(movies)
cis_var_genero = faz_boots_var(movies)
movies <- read.csv("ratings-por-filme.csv")
ratings <- read.csv("ratings.csv")
movies$genres <- as.character(movies$genres)
movies$title <- as.character(movies$title)
ratings$rating <- as.double(ratings$rating)
movies = movies %>%
rowwise() %>%
mutate(num_genres = length(unlist(strsplit(genres, '[|]'))))
faz_boots_var = function(dados){
generos = unique(dados$genero)
b = bootstrap(dados[dados$genero == generos[1],], var(rating), R = 1000)
ci = CI.bca(b, probs = c(.025, .975))
row.names(ci) <- generos[1]
for(i in 2:length(generos)) {
b = bootstrap(dados[dados$genero == generos[i],], var(rating), R = 1000)
row = CI.bca(b, probs = c(.025, .975))
row.names(row) <- generos[i]
ci = rbind(ci,row)
}
cis = data.frame(ci)
cis$genero = row.names(cis)
return(cis)
}
movies_genero = cria_avaliacoes_genero(movies)
cria_avaliacoes_genero = function(dados){
df <- data.frame(genero=character(),
rating=double(),
stringsAsFactors=FALSE)
for(i in 1:nrow(dados)) {
generos = unlist(strsplit(dados[i,]$genres,'[|]'))
for(j in 1:length(generos)){
df[nrow(df) + 1,]<- c(generos[j],dados[i,]$rating)
}
}
df$rating <- as.double(df$rating)
return(df)
}
movies_genero = cria_avaliacoes_genero(movies)
cis_var_genero = faz_boots_var(movies_genero)
faz_boots_var = function(dados){
faz_boots_var = function(dados){
generos = unique(dados$genero)
b = bootstrap(dados[dados$genero == generos[1],], var(rating), R = 1000)
ci = CI.percentile(b, probs = c(.025, .975))
row.names(ci) <- generos[1]
for(i in 2:length(generos)) {
b = bootstrap(dados[dados$genero == generos[i],], var(rating), R = 1000)
row = CI.percentile(b, probs = c(.025, .975))
row.names(row) <- generos[i]
ci = rbind(ci,row)
}
cis = data.frame(ci)
cis$genero = row.names(cis)
return(cis)
}
cis_var_genero = faz_boots_var(movies_genero)
cis_var_genero = faz_boots_var(movies_genero)
}
faz_boots_var = function(dados){
generos = unique(dados$genero)
b = bootstrap(dados[dados$genero == generos[1],], var(rating), R = 1000)
ci = CI.percentile(b, probs = c(.025, .975))
row.names(ci) <- generos[1]
for(i in 2:length(generos)) {
b = bootstrap(dados[dados$genero == generos[i],], var(rating), R = 1000)
row = CI.percentile(b, probs = c(.025, .975))
row.names(row) <- generos[i]
ci = rbind(ci,row)
}
cis = data.frame(ci)
cis$genero = row.names(cis)
return(cis)
}
cis_var_genero = faz_boots_var(movies_genero)
movies <- read.csv("ratings-por-filme.csv")
ratings <- read.csv("ratings.csv")
movies$genres <- as.character(movies$genres)
movies$title <- as.character(movies$title)
ratings$rating <- as.double(ratings$rating)
movies = movies %>%
rowwise() %>%
mutate(num_genres = length(unlist(strsplit(genres, '[|]'))))
movies = mutate(movies, title=(unlist(strsplit(title,'[(]'))[1]))
movies_tituloSize = mutate(movies, titulo_size = nchar(unlist(strsplit(title,'[:]'))[1]))
movies_tituloSizeFull = mutate(movies, titulo_size = nchar(title))
faz_boots = function(dados,mediana.bool){
generos = unique(dados$genero)
if(mediana.bool){
b = bootstrap(dados[dados$genero == generos[1],], median(rating), R = 1000)
ci = CI.percentile(b, probs = c(.025, .975))
}else{
b = bootstrap(dados[dados$genero == generos[1],], mean(rating), R = 1000)
ci = CI.bca(b, probs = c(.025, .975))
}
row.names(ci) <- generos[1]
for(i in 2:length(generos)) {
if(mediana.bool){
b = bootstrap(dados[dados$genero == generos[i],], median(rating), R = 1000)
row = CI.percentile(b, probs = c(.025, .975))
}else{
b = bootstrap(dados[dados$genero == generos[i],], mean(rating), R = 1000)
row = CI.bca(b, probs = c(.025, .975))
}
row.names(row) <- generos[i]
ci = rbind(ci,row)
}
cis = data.frame(ci)
cis$genero = row.names(cis)
return(cis)
}
faz_boots_var = function(dados){
generos = unique(dados$genero)
b = bootstrap(dados[dados$genero == generos[1],], var(rating), R = 1000)
ci = CI.percentile(b, probs = c(.025, .975))
row.names(ci) <- generos[1]
for(i in 2:length(generos)) {
b = bootstrap(dados[dados$genero == generos[i],], var(rating), R = 1000)
row = CI.percentile(b, probs = c(.025, .975))
row.names(row) <- generos[i]
ci = rbind(ci,row)
}
cis = data.frame(ci)
cis$genero = row.names(cis)
return(cis)
}
cria_avaliacoes_genero = function(dados){
df <- data.frame(genero=character(),
rating=double(),
stringsAsFactors=FALSE)
for(i in 1:nrow(dados)) {
generos = unlist(strsplit(dados[i,]$genres,'[|]'))
for(j in 1:length(generos)){
df[nrow(df) + 1,]<- c(generos[j],dados[i,]$rating)
}
}
df$rating <- as.double(df$rating)
return(df)
}
adiciona_variancia = function(dados,dados_ratings){
teste = dados
teste$var = NA
for(i in 1:nrow(dados)) {
teste[i,]$var = var(dados_ratings[(dados_ratings$movieId == dados[i,]$movieId),]$rating)
}
return(teste)
}
movies_genero = cria_avaliacoes_genero(movies)
cis_var_genero = faz_boots_var(movies_genero)
faz_boots_var = function(dados){
generos = unique(dados$genero)
b = bootstrap(dados[dados$genero == generos[1],], var(rating), R = 1000)
ci = CI.percentile(b, probs = c(.025, .975),na.rm=TRUE)
row.names(ci) <- generos[1]
for(i in 2:length(generos)) {
b = bootstrap(dados[dados$genero == generos[i],], var(rating), R = 1000)
row = CI.percentile(b, probs = c(.025, .975),na.rm=TRUE)
row.names(row) <- generos[i]
ci = rbind(ci,row)
}
cis = data.frame(ci)
cis$genero = row.names(cis)
return(cis)
}
cis_var_genero = faz_boots_var(movies_genero)
View(cis_var_genero)
cis_var_genero %>%
ggplot(aes(x = genero, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
runApp('~/Documents/workspace/UFCG/AD1-2016.1/repo/problema-2/Checkpoint3')
